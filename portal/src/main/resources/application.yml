server:
  port: 8502

mq:
  host: localhost
  port: 5672
  username: guest
  password: guest
  virtual-host: ddmp


es:
  cluster_name: elasticsearch
  cluster_nodes: localhost:9300


spring:
  jackson:
      date-format: yyyy-MM-dd HH:mm:ss
      time-zone: GMT+8

   #============== kafka ===================
   # 指定kafka 代理地址，可以多个
  kafka:
    bootstrap-servers: localhost:9092
   #=============== provider  =======================
    producer:
      retries: 0
   # 每次批量发送消息的数量
      batch-size: 16384
      buffer-memory: 33554432
   # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
   #=============== consumer  =======================
   # 指定默认消费者group id
    consumer:
      group-id: test-consumer-group
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 100
   # 指定消息key和消息体的编解码方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


  redis:
    database: 2 # Redis数据库索引（默认为0）
    host: localhost # Redis服务器地址
    port: 6379 # Redis服务器连接端口
#    password: admin # Redis服务器连接密码（默认为空）
    pool:
      max-active: 8 #连接池最大连接数（使用负值表示没有限制）
      max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 8 # 连接池中的最大空闲连接
      min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000  # 连接超时时间（毫秒）

  rabbitmq:
    host: ${mq.host}
    port: ${mq.port}
    username: ${mq.username}
    password: ${mq.password}
    virtual-host: ${mq.virtual-host}

  cloud:
    loadbalancer:
      retry:
        enabled: true

    stream:
      bindings:
        PROJECT_PortalData_Send:
          destination: DPROJECT_PortalData_Queues

        PROJECT_PortalData_Recv:
          destination: DPROJECT_PortalData_Queues

feign:
  client:
    config:
      default:
        connectTimeout: 2000
        readTimeout: 45000

management:
  health:
    elasticsearch:
      enabled: false




